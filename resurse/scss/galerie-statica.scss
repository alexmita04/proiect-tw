@use "sass:math";
@use "sass:list";
@use "sass:string";

#grid-galerie {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 1fr;
  grid-row-gap: 0;
  grid-column-gap: 0;

  $greek-letters: α, β, γ, δ, ε, ζ, η, θ, ι, κ, λ, μ;

  $row: 1;

  figure {
    opacity: 0;
    animation: fadeIn 1s ease forwards;
    perspective: 1000px;
    overflow: hidden;
  }

  @for $i from 1 through 12 {
    figure:nth-child(#{$i}) {
      animation-delay: $i * 0.3s; // intarziere pe rand
      border: 3px solid var(--culoare-4);
      margin: 0;
      transition: border-color 0.5s ease;

      @if $i % 3 == 1 {
        $coloana: 1;
        grid-area: #{$row} / #{$coloana} / #{($row + 1)} / #{($coloana + 1)};
      } @else if $i % 3 == 2 {
        $coloana: 3;
        grid-area: #{$row} / #{$coloana} / #{($row + 1)} / #{($coloana + 1)};
      } @else {
        $coloana: 2;
        grid-area: #{$row} / #{$coloana} / #{($row + 1)} / #{($coloana + 1)};
      }

      figcaption {
        text-align: center;
        transition: transform 1.1s ease;
        transform-origin: center center;
        &::before {
          content: string.quote(list.nth($greek-letters, $i)) ". ";
        }
      }

      img {
        width: 100%;
        transition: filter 1.1s ease, transform 0.8s ease,
          transform-style 0.8s ease;
        transform-style: preserve-3d;
      }

      &:hover {
        border-color: var(--culoare-highlight);

        figcaption {
          transform: scale(1.2);
        }

        img {
          filter: contrast(200%);
          transform: rotateY(180deg);
        }
      }
    }

    @if $i % 3 == 0 or $i % 3 == 2 {
      $row: $row + 1;
    }
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
